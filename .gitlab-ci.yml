stages:
  - sonar
  - build
  - deploy

variables:
  CI_GITLAB_API_TOKEN: $CI_GITLAB_API_TOKEN
  DOCKER_REPOSITORY_IMAGE: $DOCKER_REPOSITORY_IMAGE

sonarqube-check:
  stage: sonar
  tags:
    - kuber
  image:
    name: sonarsource/sonar-scanner-cli:latest
    entrypoint: [""]
  variables:
    SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar"
    GIT_DEPTH: "0"
  cache:
    key: "${CI_JOB_NAME}"
    paths:
      - .sonar/cache
  script:
    - sonar-scanner
  allow_failure: true
  only:
    - dev
    - merge_requests
    - develop

sonarqube-pr-decoration:
  stage: sonar
  script:
    - echo sonar.pullrequest.key=$CI_MERGE_REQUEST_IID >> sonar-project.properties
    - echo sonar.pullrequest.branch=$CI_MERGE_REQUEST_BRANCH_NAME >> sonar-project.properties
  only:
    - dev
    - merge_requests
    - develop
  tags:
    - kuber

build:
  stage: build
  only:
    - dev
  image: $BUILD_DOCKER_IMAGE
  script:
    - docker login -u gitlab-ci-token -p ${CI_BUILD_TOKEN} ${CI_REGISTRY}
    - >
      docker build
      --build-arg SKIP_PREFLIGHT_CHECK=$SKIP_PREFLIGHT_CHECK
      --build-arg API_BASE_URL=${API_BASE_URL}
      --build-arg BASE_URL=${BASE_URL}
      --network=host -t ${DOCKER_REPOSITORY_IMAGE} .
    - docker push ${DOCKER_REPOSITORY_IMAGE}

deploy:
  stage: deploy
  only:
    - dev
  image: $DEPLOY_DOCKER_IMAGE
  script:
    - grdp-ctl
